# 默认使用meta内核
# 因shellclash只会抓取规则进行二次加工, 此规则只保留规则定义, 其他全靠shellclash定义自己生成
# 如其他软件导入报错, 请自行补全, 参照此示例 https://docs.metacubex.one/example/ex1
# 配置文件需要放置在 $HOME/.config/clash/config.yml
# 或者运行目录下的config.yml
#---------------------------------------------------#

mixed-port: 7890 # 混合端口 HTTP和SOCKS5用一个端口

# port: 7890 # HTTP 代理端口

# socks-port: 7891 # SOCKS5 代理端口

# redir-port: 7892 # Linux 和 macOS 的 redir 代理端口 (如需使用此功能，请取消注释)

#allow-lan: true  # 允许局域网的连接（可用来共享代理）
# 仅在将allow-lan设置为true时适用
# #"*": 绑定所有IP地址
# #192.168.122.11: 绑定单个IPv4地址
# #"[aaaa::a8aa:ff:fe09:57d8]": 绑定单个IPv6地址
#bind-address: "*"
ipv6: true

mode: rule # 规则模式：rule（规则） / global（全局代理）/ direct（全局直连）/ script (脚本)

log-level: info # 5 个级别：silent / error / warning / info / debug。级别越高日志输出量越大，越倾向于调试，若需要请自行开启。

# Clash 的 RESTful API
external-controller: 0.0.0.0:9090

# 您可以将静态网页资源（如 clash-dashboard）放置在一个目录中，clash 将会服务于 `RESTful API/ui`
# 参数应填写配置目录的相对路径或绝对路径。
# http://127.0.0.1:9090/ui/#/
# external-ui: folder
# yacd面板：  https://github.com/haishanh/yacd
# Razord面板：http://clash.razord.top/#/proxies
# external-ui: dashboard

# RESTful API 的口令 (可选)
# secret: ""

# 实验性功能
#experimental:
  #ignore-resolve-fail: true # 忽略 DNS 解析失败，默认值为 true
  # interface-name: en0 # outbound interface name

# 本地 SOCKS5 / HTTP(S) 服务认证
# authentication:
#  - "user1:pass1"
#  - "user2:pass2"

# 实验性功能 hosts, 支持通配符 (例如 *.clash.dev 甚至 *.foo.*.example.com)
# 静态的域名 比 通配域名 具有更高的优先级 (foo.example.com 优先于 *.example.com)
# 注意: hosts 在 fake-ip 模式下不生效
#hosts:
#   '*.clash.dev': 127.0.0.1
#   'alpha.clash.dev': '::1'

dns:
  enable: true # 是否启用dns false
  #ipv6: false
  listen: 0.0.0.0:53
  enhanced-mode: redir-host # 模式：redir-host或fake-ip
  #fake-ip-range: 198.18.0.1/16 #
  #fake-ip-filter: # fake ip 白名单列表，如果你不知道这个参数的作用，请勿修改
     #- '*.lan'
     #- localhost.ptlogin2.qq.com
  nameserver:
     - 223.5.5.5 # 阿里DNS
     - 180.76.76.76 # 百度DNS
     - 119.29.29.29 # 腾讯DNS
     - 117.50.11.11 # ONE DNS拦截版 恶意网站拦截、广告过滤
     - 117.50.10.10 # ONE DNS纯净版 直接返回其真实的响应结果
     - 114.114.114.114 # 114DNS
     - 8.8.8.8 # 谷歌DNS
     - 1.1.1.1 # Cloudflare DNS
     - tls://dns.rubyfish.cn:853
     - tls://1.0.0.1:853
     - tls://dns.google:853
     - https://dns.alidns.com/dns-query # 阿里 DoH DNS
     - https://doh.360.cn/dns-query # 360 DoH DNS
  #fallback:
     #- 8.8.8.8 # 谷歌DNS
     #- 1.1.1.1 # Cloudflare DNS
     #- tls://dns.rubyfish.cn:853
     #- tls://1.0.0.1:853
     #- tls://dns.google:853
     #- https://dns.rubyfish.cn/dns-query
     #- https://cloudflare-dns.com/dns-query
     #- https://dns.google/dns-query
   # fallback-filter:
   #  geoip: true  # 默认
   #  geoip-code: CN
   #  ipcidr: # 在这个网段内的 IP 地址会被考虑为被污染的 IP
   #    - 240.0.0.0/4
    #   domain:
    #  - '+.google.com'
    #  - '+.googleapis.com'
    #  - '+.youtube.com'
    #  - '+.appspot.com'
    #  - '+.telegram.com'
    #  - '+.facebook.com'
    #  - '+.twitter.com'
    #  - '+.blogger.com'
    #  - '+.gmail.com'
    #  - '+.gvt1.com'

# 1. clash DNS 请求逻辑：
#   (1) 当访问一个域名时， nameserver 与 fallback 列表内的所有服务器并发请求，得到域名对应的 IP 地址。
#   (2) clash 将选取 nameserver 列表内，解析最快的结果。
#   (3) 若解析结果中，IP 地址属于 国外，那么 clash 将选择 fallback 列表内，解析最快的结果。
#
#   因此，我在 nameserver 和 fallback 内都放置了无污染、解析速度较快的国内 DNS 服务器，以达到最快的解析速度。
#   但是 fallback 列表内服务器会用在解析境外网站，为了结果绝对无污染，我仅保留了支持 DoT/DoH 的两个服务器。
#
# 2. clash DNS 配置注意事项：
#   (1) 如果您为了确保 DNS 解析结果无污染，请仅保留列表内以 tls:// 或 https:// 开头的 DNS 服务器，但是通常对于国内域名没有必要。
#   (2) 如果您不在乎可能解析到污染的结果，更加追求速度。请将 nameserver 列表的服务器插入至 fallback 列表内，并移除重复项。
#
# 3. 关于 DNS over HTTPS (DoH) 和 DNS over TLS (DoT) 的选择：
#   对于两项技术双方各执一词，而且会无休止的争论，各有利弊。各位请根据具体需求自行选择，但是配置文件内默认启用 DoT，因为目前国内没有封锁或管制。
#   DoH: 以 https:// 开头的 DNS 服务器。拥有更好的伪装性，且几乎不可能被运营商或网络管理封锁，但查询效率和安全性可能略低。
#   DoT: 以 tls:// 开头的 DNS 服务器。拥有更高的安全性和查询效率，但端口有可能被管制或封锁。
#   若要了解更多关于 DoH/DoT 相关技术，请自行查阅规范文档。



# 服务器节点订阅
#proxy-providers:
  #  节点: # Provider 名称
  # type: http
  #  url:  https://raw.iqiq.io/maplelgj/TV/main/VV # 机场给你的clash订阅链接
  #  path: ./proxy_provider/jiedian.yaml # 保存在本地文件的名字，可以随便取
    
proxies:
  - {name: BWG-VMESS, server: 679888.xyz, port: 56788, type: vmess, uuid: b92dfaee-7b1a-4c36-a737-f69f1e67a6ce, alterId: 0, cipher: auto, tls: true, network: ws, ws-opts: {path: /1edd91/, headers: {Host: 679888.xyz}}}
  - {name: Racknerd-Vmess, server: heihei006009.tk, port: 343, type: vmess, uuid: 7ed04ef6-0f03-42f1-a609-b21a0b3a3181, alterId: 0, cipher: auto, tls: true, network: ws, ws-opts: {path: /47d5ff16f/, headers: {Host: heihei006009.tk}}}
 
proxy-groups:
  - name: 🎯 国内流量
    type: select
    proxies:
      - DIRECT
  - name: 🎶 TikTok
    type: select
    proxies:
      - BWG-VMESS
      - Racknerd-Vmess
  - name: 📲 Telegram
    type: select
    proxies:
      - BWG-VMESS
      - Racknerd-Vmess
  - name: 📢 谷歌服务
    type: select
    proxies:
      - BWG-VMESS
      - Racknerd-Vmess
  - name: Ⓜ️ 微软服务
    type: select
    proxies:
      - DIRECT
      - BWG-VMESS
      - Racknerd-Vmess
  - name: 🍎 苹果服务
    type: select
    proxies:
      - DIRECT
      - BWG-VMESS
      - Racknerd-Vmess
  - name: 🌍 国外媒体
    type: select
    proxies:
      - BWG-VMESS
      - Racknerd-Vmess
      - DIRECT
  - name: 🚀 国外流量
    type: select
    proxies:
      - BWG-VMESS
      - Racknerd-Vmess
  - name: 🛑 广告拦截
    type: select
    proxies:
      - REJECT
      - DIRECT
  - name: 🐟 漏网之鱼
    type: select
    proxies:
      - DIRECT
      - BWG-VMESS
      - Racknerd-Vmess
 
# 规则地址
rule-providers:
  ChinaMax_Classical:
    type: http
    behavior: classical
    path: ./rule/ChinaMax_Classical.yaml
    url: https://raw.iqiq.io/blackmatrix7/ios_rule_script/master/rule/Clash/ChinaMax/ChinaMax_Classical.yaml
    interval: 86400
    
  Advertising_Classical:
    type: http
    behavior: classical
    path: ./rule/Advertising_Classical.yaml
    url: https://raw.iqiq.io/blackmatrix7/ios_rule_script/master/rule/Clash/Advertising/Advertising_Classical.yaml
    
  ZhihuAds:
    type: http
    behavior: classical
    path: ./rule/ZhihuAds.yaml
    url: https://raw.iqiq.io/blackmatrix7/ios_rule_script/master/rule/Clash/ZhihuAds/ZhihuAds.yaml
    interval: 86400
    
  Hijacking:
    type: http
    behavior: classical
    path: ./rule/Hijacking.yaml
    url: https://raw.iqiq.io/blackmatrix7/ios_rule_script/master/rule/Clash/Hijacking/Hijacking.yaml
    interval: 86400
    
  Apple:
    type: http
    behavior: classical
    path: ./rule/Apple.yaml
    url: https://raw.iqiq.io/blackmatrix7/ios_rule_script/master/rule/Clash/Apple/Apple.yaml
    interval: 86400
    
  Google:
    type: http
    behavior: classical
    path: ./rule/Google.yaml
    url: https://raw.iqiq.io/blackmatrix7/ios_rule_script/master/rule/Clash/Google/Google.yaml
    interval: 86400
    
  Microsoft:
    type: http
    behavior: classical
    path: ./rule/Microsoft.yaml
    url: https://raw.iqiq.io/blackmatrix7/ios_rule_script/master/rule/Clash/Microsoft/Microsoft.yaml
    interval: 86400
    
  TikTok:
    type: http
    behavior: classical
    path: ./rule/TikTok.yaml
    url: https://raw.iqiq.io/blackmatrix7/ios_rule_script/master/rule/Clash/TikTok/TikTok.yaml
    interval: 86400   
    
  Telegram:
    type: http
    behavior: classical
    path: ./rule/Telegram.yaml
    url: https://raw.iqiq.io/blackmatrix7/ios_rule_script/master/rule/Clash/Telegram/Telegram.yaml
    interval: 86400  
    
  GlobalMedia:
    type: http
    behavior: classical
    path: ./rule/GlobalMedia.yaml
    url: https://raw.iqiq.io/blackmatrix7/ios_rule_script/master/rule/Clash/GlobalMedia/GlobalMedia.yaml
    interval: 86400 
    
  Proxy_Classical:
    type: http
    behavior: classical
    path: ./rule/Proxy_Classical.yaml
    url: https://raw.iqiq.io/maplelgj/ios_rule_script/master/rule/Clash/Proxy/Proxy_Classical.yaml
    interval: 86400    
    
  GFW:
    type: http
    behavior: classical
    path: ./rule/GFW.yaml
    url: https://raw.iqiq.io/maplelgj/TV/main/clash/GFW.yaml
    interval: 86400
    
rules:
# 内容：可以自行添加其它自己想要的规则
 #- DOMAIN-KEYWORD,tinder,🚀 国外流量
 #- DOMAIN-KEYWORD,dandanzan10,🚀 国外流量
 #- DOMAIN-SUFFIX,dandanzan10.top,🚀 国外流量
 
# 下面的规则是通过上面的rule-provider来确定的
 - RULE-SET,ChinaMax_Classical,🎯 国内流量
 - RULE-SET,Advertising_Classical,🛑 广告拦截
 - RULE-SET,Hijacking,🛑 广告拦截
 - RULE-SET,ZhihuAds,🛑 广告拦截
 - RULE-SET,Apple,🍎 苹果服务
 - RULE-SET,Google,📢 谷歌服务
 - RULE-SET,Microsoft,Ⓜ️ 微软服务
 - RULE-SET,TikTok,🎶 TikTok
 - RULE-SET,Telegram,📲 Telegram
 - RULE-SET,GlobalMedia,🌍 国外媒体
 - RULE-SET,Proxy_Classical,🚀 国外流量
 - RULE-SET,GFW,🚀 国外流量
 - GEOIP,CN,🎯 国内流量
 - GEOIP,LAN,🎯 国内流量
#- GEOSITE,CN,🎯 国内流量 #【Meta专属】
 - MATCH,🐟 漏网之鱼
 

    
